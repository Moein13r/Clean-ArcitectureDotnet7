@page "/registerForm"
@using AutoMapper;
@using BlazorWeb.Data;
@using BlazorWeb.Extensions;
@using BlazorWeb.Service;
@inject ICustomerService customerService
<PageTitle>Register </PageTitle>
<h4 class="text-danger">@status</h4>
<EditForm class="row form-inline" Model="@customer" OnValidSubmit="@OnSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="col-md-4 form-group mb-4">
        <label For="@(() => customer.FirstName))">
            FirstName
        </label>
        <InputText class="form-control" DisplayName="" @bind-Value="customer.FirstName" />
    </div>
    <div class="col-md-4 form-group mb-4">
        <label For="@(() => customer.LastName))">
            LastName
        </label>
        <InputText class="form-control" @bind-Value="customer.LastName" />
    </div>
    <div class="col-md-4 form-group mb-4">
        <label For="@(() => customer.PhoneNumber))">
            PhoneNumber
        </label>
        <InputText class="form-control" @bind-Value="customer.PhoneNumber" />
    </div>
    <div class="col-md-4 form-outline mb-4">
        <label For="@(() => customer.Email))">
            Email
        </label>
        <InputText class="form-control" @bind-Value="customer.Email" />
    </div>
    <div class="col-md-4 form-outline mb-4">
        <label For="@(() => customer.BankAccountNumber))">
            BankAccountNumber
        </label>
        <InputNumber class="form-control" @bind-Value="customer.BankAccountNumber" />
    </div>
    <div class="col-md-4 form-outline mb-4">
        <label For="@(() => customer.DateOfBirth))">
            DateOfBirth
        </label>
        <InputText class="form-control" @bind-Value="customer.DateOfBirth" />
    </div>
    <button class="form-outline mb-4 btn btn-dark" type="submit">Submit</button>
</EditForm>
@code {
    public string status { get { return _status; } set { _status = value; } }
    string _status;
    async void OnSubmit()
    {
        status = "";
        if (customer.Email.IsValidEmail() || customer.PhoneNumber.IsValidPhone() || customer.BankAccountNumber.IsValidBankCardNumber())
        {
            int id = await customerService.AddCustomer(customer, default);
            if (id > 0)
            {
                customer = new Customer();
            }
            else
            {
                status = "Error In Save Information Please try Again Later";
            }
        }
        else
        {
            status = "Error: enSure Email and Phone and banknumber are in Correct Format";
        }
    }
    Customer customer = new();
}